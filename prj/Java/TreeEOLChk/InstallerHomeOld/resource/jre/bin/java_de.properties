#Wed May 30 17:39:10 EDT 2007
SHRC029=System verf\u00fcgt nicht \u00fcber ausreichend Speicherkapazit\u00e4t
SHRC028=Berechtigung verweigert.
SHRC027=Name des gemeinsam genutzten Caches ist zu lang.
SHRC026=Cache der angeforderten Gr\u00f6\u00dfe kann nicht erstellt werden\: SHMMAX- und SHMMIN-Einstellungen pr\u00fcfen
SHRC025=Fehler beim Zuordnen des gemeinsam genutzten Speichers
SHRC024=Fehler beim Freigeben des gemeinsam genutzten Speichers
SHRC023=Cache ist nicht vorhanden.
SHRC022=Fehler beim Erstellen eines gemeinsam genutzten Speicherbereichs
SHRC021=Ein unbekannter Fehlercode wurde zur\u00fcckgegeben.
SHRC020=Beim \u00d6ffnen des Semaphors ist ein Fehler aufgetreten.
SHRC019=Anforderungsl\u00e4nge ist zu kurz.
SHRC018=Speicher kann nicht reserviert werden.
SHRC017=Fehlercode\: %d
SHRC016=Fehler im Cache f\u00fcr gemeinsam genutzte Klassen\:
SHRC015=Fehler im Cache f\u00fcr gemeinsam genutzte Klassen\: Ung\u00fcltige Markierung
SHRC014=Semaphor des gemeinsam genutzten Caches %s konnte nicht entfernt werden.
SHRC013=Speicher des gemeinsam genutzten Caches %s konnte nicht entfernt werden.
SHRC012=Gemeinsam genutzter Cache %s kann nicht entfernt werden, da dem Cache noch JVMs zugeordnet sind.
SHRC011=Fehler\: Cache f\u00fcr gemeinsam genutzte Klassen kann nicht ge\u00f6ffnet werden.
SHRC010=Gemeinsam genutzter Cache %s wird gel\u00f6scht.
J9TI012=Dynamische -Xdump-Option hinzuf\u00fcgen
J9TI011=Dynamische -Xtrace-Option hinzuf\u00fcgen
J9TI010=Methodeneintrag mit erweiterten Informationen zum Methodentyp
SHRC009=Cache f\u00fcr gemeinsam genutzte Klassen wurde ge\u00f6ffnet\: %1$s Gr\u00f6\u00dfe\: %2$d Byte
SHRC008=Cache f\u00fcr gemeinsam genutzte Klassen wurde erstellt\: %1$s Gr\u00f6\u00dfe\: %2$d Byte
SHRC007=Cache %s f\u00fcr gemeinsam genutzte Klassen konnte nicht entfernt werden.
SHRC006=Anzahl der in den letzten %1$d Minuten abgelaufenen Caches\: %2$d
SHRC005=Es sind keine Caches mit gemeinsam genutzten Klassen vorhanden.
SHRC004=Cache %s kann nicht gel\u00f6scht werden.
SHRC003=letzte Freigabezeit
SHRC002=im Gebrauch
SHRC001=ID f\u00fcr gemeinsamen Speicher des Betriebssystems
SHRC000=Gemeinsam genutzter Cache
J9TI009=Gibt das Ende einer JIT-Kompilierungsphase an. (Nicht sicher f\u00fcr Callback)
J9TI008=Gibt den Start einer JIT-Kompilierungsphase an. (Nicht sicher f\u00fcr Callback)
J9TI007=Aktuellen Satz der erweiterten Leistungsmerkmale \u00fcber capabilities_ptr abrufen
J9TI006=Erweiterte Leistungsmerkmale von capabilities_ptr aufgeben
J9TI005=Neue erweiterte Leistungsmerkmale von capabilities_ptr hinzuf\u00fcgen
J9TI004=Gibt \u00fcber capabilities_ptr die erweiterten Leistungsmerkmalen zur\u00fcck, die derzeit verf\u00fcgbar sind.
J9TI003=Agent_OnLoad ist f\u00fcr Bibliothek %s fehlgeschlagen.
J9TI002=Agent_OnLoad wurde in Bibliothek %s nicht gefunden.
J9TI001=Agentenbibliothek %1$s konnte nicht ge\u00f6ffnet werden (%2$s)
J9TI000=Nicht gen\u00fcgend Speicherkapazit\u00e4t beim Versuch, die Agentenbibliothek %s zu laden.
J9VM039=-Xscmx wird ignoriert, wenn -Xshareclasses nicht angegeben ist.
J9VM038=-Xthr\: nicht erkannte Option --> '%s'
J9VM037=Monitor konnte nicht zugeordnet werden.
J9VM036=/ durch Null
J9VM035=OutOfMemoryError kann nicht zugeordnet werden.
J9VM034=jvmri erfordert Trace-Steuerkomponente\: mit der Markierung -Xtrace ausf\u00fchren
J9VM033=Schwer wiegender Fehler\: %s konnte nicht initialisiert werden.
J9VM032=Schwer wiegender Fehler\: %1$s kann nicht geladen werden\: %2$s
J9VM031=Erforderliche Klasse %2$.*1$s muss sich im Boot-Klassenpfad befinden, wurde jedoch im Anwendungsklassenpfad in %4$.*3$s gefunden.
J9VM030=Ung\u00fcltiges UTF8-Format in JNI-Funktion verwendet.
J9VM029=\tbei (unbekannte Methode)
J9VM028=\tbei %2$.*1$s.%4$.*3$s (%6$.*5$s\:%7$u)
J9VM027=\tbei %2$.*1$s.%4$.*3$s (%6$.*5$s)
J9VM026=\tbei %2$.*1$s.%4$.*3$s (unbekannte Quelle)
J9VM025=\tbei %2$.*1$s.%4$.*3$s (native Methode)
J9VM024=Ausnahmebedingung in Thread "%.*s" 
J9VM023=Dies kann darauf hindeuten, dass JAVA_HOME falsch ist oder dass die Klassenbibliotheken nicht installiert sind.
J9VM022=Stackzuordnung ist fehlgeschlagen. Ergebnis \= %p. VM wird abgebrochen.
J9VM021=Zu geringe Speicherkapazit\u00e4t f\u00fcr Interpreter-Stackzuordnung. VM wird abgebrochen.
J9VM020=Es wurde in %.*s gesucht.
J9VM019=Schwer wiegender Fehler\: Erforderliche Klasse %.*s konnte nicht gefunden und initialisiert werden.
J9VM018=Speicher f\u00fcr DLL-Ladetabellenpool konnte nicht zugeordnet werden.
J9VM017=Speicher f\u00fcr Optionsfeldgruppe der Befehlszeile konnte nicht zugeordnet werden.
J9VM016=Beendigungsfehler f\u00fcr Bibliothek %1$s(%2$d)\: %3$s
J9VM015=Initialisierungsfehler f\u00fcr Bibliothek %1$s(%2$d)\: %3$s
J9VM014=Beendigungsfehler in Funktion %1$s(%2$d)\: %3$s
J9VM013=Initialisierungsfehler in Funktion %1$s(%2$d)\: %3$s
J9VM012=%1$s kann nicht entladen werden\: %2$s
J9VM011=%1$s kann nicht geladen werden\: %2$s
J9VM010=%s konnte nicht initialisiert werden.
J2JX103=Methode konnte nicht kompiliert werden\: %2$.*1$s/%4$.*3$s%6$.*5$s jitErr 0%7$x
J2JX102=Native Methode konnte nicht kompiliert werden\: %2$.*1$s/%4$.*3$s%6$.*5$s
J2JX101=Abstrakte Methode konnte nicht kompiliert werden\: %2$.*1$s/%4$.*3$s%6$.*5$s
J2JX100=%s wird in dieser Konfiguration nicht unterst\u00fctzt.
J9VM009=J9VMDllMain ist fehlgeschlagen.
J9VM008=J9VMDllMain wurde nicht gefunden.
J9VM007=Nicht erkannte Befehlszeilenoption\: %s
J9VM006=Ung\u00fcltige Befehlszeilenoption\: %s
J9VM005=Ung\u00fcltiger Wert f\u00fcr Umgebungsvariable\: %s
J9VM004=Erforderliche Bibliothek kann nicht geladen werden von\: %s
J9VM003=JIT-Compiler "%s" wurde nicht gefunden. Interpreter wird verwendet.
J9VM002=Optionsdatei wurde nicht gefunden.
J9VM001=Fehlerhafter Wert f\u00fcr -Xservice
J9VM000=Fehlerhafter Wert f\u00fcr IBM_JAVA_OPTIONS
EXEL079=\  -Xscmx<x>       Gr\u00f6\u00dfe des neuen Caches f\u00fcr gemeinsam genutzte Klassen auf <x> setzen
EXEL078=\  -Xshareclasses[\:Optionen]  gemeinsame Nutzung von Klassendaten aktivieren (Details mit -help abrufen) \n
EXEL077=\  -Xssi<x>        Inkrement des Java-Thread-Stacks auf <x> setzen
EXEL076=JIT  - %s\n
EXEL075=\  -Xquickstart    Startzeit durch Verz\u00f6gerung von Optimierungen verbessern
EXEL074=Konsol-E/A konnte nicht an %1$s\:%2$d umgeleitet werden
EXEL073=Interner VM-Fehler\: Java VM konnte nicht erstellt werden.
EXEL072=Fehler beim VM-Start\: Nicht gen\u00fcgend Speicherkapazit\u00e4t.
EXEL071=Hauptklassenname konnte nicht gefunden werden.
EXEL070=ROM-Image hat die falsche Version.
EXEL069=ROM-Image konnte nicht gefunden werden.
EXEL068=Interner VM-Fehler\: Feldgruppenelement f\u00fcr %s konnte nicht festgelegt werden.
EXEL067=Interner VM-Fehler\: java/lang/String f\u00fcr Argument %s konnte nicht erstellt werden.
EXEL066=Interner VM-Fehler\: Bytefeldgruppe f\u00fcr Argument %s konnte nicht erstellt werden.
EXEL065=Interner VM-Fehler\: Argumentenfeldgruppe konnte nicht erstellt werden.
EXEL064=Die Methode 'main' muss als 'public', 'static' und 'void' deklariert werden.
EXEL063=Klasse %s implementiert main() nicht.
EXEL062=Interner VM-Fehler\: Nicht gen\u00fcgend Speicherkapazit\u00e4t beim Konvertieren der Zeichenfolge in UTF-Zeichen f\u00fcr Klassenname %s
EXEL061=Interner VM-Fehler\: java/lang/String f\u00fcr Klassenname %s konnte nicht erstellt werden.
EXEL060=Interner VM-Fehler\: Bytefeldgruppe f\u00fcr Klassenname %s konnte nicht erstellt werden.
JVMP000=Der Versuch, %.*s \u00fcber JVMPI zu instrumentieren, wurde nicht zugelassen.
EXEL059=Interner VM-Fehler\: Klasse java/lang/String konnte nicht gefunden werden.
EXEL058=Interner VM-Fehler\: Nicht gen\u00fcgend Speicherkapazit\u00e4t
EXEL057=Java-Version "1.3.0"\n
EXEL056=IBM ist eine eingetragene Marke der IBM Corporation. \nJava und alle Java-basierten Marken und Logos sind Marken oder eingetragene \nMarken von Sun Microsystems, Inc. \n
EXEL055=Ziel\: %s
EXEL054=(c) Copyright IBM Deutschland GmbH. 1991, %s  Alle Rechte vorbehalten.
EXEL053=Lizenziertes Material - Eigentum von IBM\n\nJ9 - VM f\u00fcr die Java(TM)-Plattform Version %s
EXEL052=\nWARNUNG\: Der Befehlszeilenparameter "%s" ist veraltet. \nWARNUNG\: Verwenden Sie den funktional entsprechenden Parameter -X.
EXEL051=\nWARNUNG\: Der Befehlszeilenparameter "%s" ist veraltet. \nWARNUNG\: Verwenden Sie "-classpath <Pfad>" oder "-cp <Pfad>".
EXEL050=\  -Xrdbginfo\:<Host>\:<Port>       fernen Debuginformationsserver aktivieren
EXEL049=\  -Xdbginfo\:<Symboldateipfad>    Debuginformationsserver aktivieren
EXEL048=\  -Xrunjdwp\:<Optionen>           Debugging aktivieren (JDWP-Standardoptionen)
EXEL047=\n  -Xdbg\:<Optionen>               Debugging aktivieren (JDWP-Standardoptionen)
EXEL046=\  -Xlp                          Unterst\u00fctzung f\u00fcr gro\u00dfe Seiten aktivieren
EXEL045=\  -Xnocompactgc                 Komprimierung inaktivieren
EXEL044=\  -Xcompactgc                   Komprimierung aktivieren
EXEL043=\  -Xcompactexplicitgc           Komprimierung bei jeder System-GC aktivieren
EXEL042=\  -Xnocompactexplicitgc         Komprimierung bei einer System-GC inaktivieren
EXEL041=\  -Xalwaysclassgc               Dynamisches Entladen von Klassen bei jeder GC aktivieren
EXEL040=\  -Xclassgc                     Dynamisches Entladen von Klassen aktivieren
EXEL039=\  -Xnoclassgc                   Dynamisches Entladen von Klassen inaktivieren
EXEL038=\  -Xgcthreads<x>                Anzahl der GC-Threads festlegen
EXEL037=\nArgumente f\u00fcr die folgenden Optionen werden als Dezimalzahlen angegeben. \n
EXEL036=\  -Xmaxf<x>       Maximaler Prozentsatz des freien Freispeichers nach GC
EXEL035=\  -Xminf<x>       Mindestprozentsatz des freien Freispeichers nach GC
ZIPS001=%s kann nicht ge\u00f6ffnet werden (fehlender Export).
EXEL034=Der Wert 0,3 steht f\u00fcr eine Anforderung von 30 %%. \n
ZIPS000=%1$s kann nicht ge\u00f6ffnet werden (%2$s)
EXEL033=\nArgumente f\u00fcr die folgenden Optionen werden als Dezimalzahl von 0 bis 1 angegeben.
EXEL032=\  -Xmaxe<x>       Maximalgr\u00f6\u00dfe f\u00fcr die Freispeichererweiterung auf <x> setzen
EXEL031=\  -Xmine<x>       Mindestgr\u00f6\u00dfe f\u00fcr die Freispeichererweiterung auf <x> setzen
EXEL030=\  -Xss<x>         Gr\u00f6\u00dfe f\u00fcr Thread-Stack auf <x> setzen
J9RI021=jvmri->RunDumpRoutine wird nicht unterst\u00fctzt.
EXEL029=\  -Xss<x>         Maximalstackgr\u00f6\u00dfe f\u00fcr Java-Threads auf <x> setzen
J9RI020=jvmri->CreateThread kann keinen privaten Monitor zuordnen.
EXEL028=\  -Xiss<x>        Anfangsstackgr\u00f6\u00dfe f\u00fcr Java-Threads auf <x> setzen
EXEL027=\  -Xmso<x>        Stackgr\u00f6\u00dfe f\u00fcr Betriebssystem-Threads auf <x> setzen
EXEL026=\  -Xmrx<x>        Maximalgr\u00f6\u00dfe f\u00fcr gemerkte Gruppe auf <x> setzen
EXEL025=\  -Xmr<x>         Gr\u00f6\u00dfe f\u00fcr gemerkte Gruppe auf <x> setzen
EXEL024=\  -Xmx<x>         Maximalgr\u00f6\u00dfe f\u00fcr Hauptspeicher auf <x> setzen
EXEL023=\  -Xms<x>         Anfangsgr\u00f6\u00dfe f\u00fcr Hauptspeicher auf <x> setzen
EXEL022=\  -Xms<x>         Gr\u00f6\u00dfe f\u00fcr Speicherbereich f\u00fcr alte Objekte auf <x> setzen
EXEL021=\  -Xmoi<x>        Inkrement f\u00fcr Speicherbereich f\u00fcr alte Objekte auf <x> setzen
EXEL020=\  -Xmox<x>        Maximalgr\u00f6\u00dfe f\u00fcr Speicherbereich f\u00fcr alte Objekte auf <x> setzen
J9RI019=jvmri->InjectOutOfMemory nicht unterst\u00fctzt.
J9RI018=jvmri->NotifySignal l\u00f6st Signal %d aus.
J9RI017=Speicherauszugsagent kann in jvmri->SetOutOfMemoryHook nicht zugeordnet werden. Funktion nicht registriert.
J9RI016=jvmri->SetOutOfMemoryHook mit leerem Callback aufgerufen. Funktion nicht registriert.
J9RI015=jvmri->RunDumpRoutine\: Komponenten-ID liegt au\u00dferhalb des g\u00fcltigen Bereichs.
J9RI014=jvmri->RunDumpRoutine\: Komponentendaten k\u00f6nnen nicht abgerufen werden.
J9RI013=jvmri->ReleaseRasInfo\: Struktur hat nicht unterst\u00fctztes Typenfeld.
J9RI012=jvmri->ReleaseRasInfo mit leerer RasInfo-Struktur aufgerufen.
EXEL019=\  -Xmos<x>        Anfangsgr\u00f6\u00dfe f\u00fcr Speicherbereich f\u00fcr alte Objekte auf <x> setzen
J9RI011=RasInfo-Struktur hat nicht unterst\u00fctztes Typenfeld.
EXEL018=\  -Xmo<x>         Anfangs-/Maximalgr\u00f6\u00dfe f\u00fcr Speicherbereich f\u00fcr alte Objekte auf <x> setzen
J9RI010=jvmri->GetRasInfo kann keinen Speicher zuordnen.
EXEL017=\  -Xmo<x>         Gr\u00f6\u00dfe f\u00fcr Speicherbereich f\u00fcr alte Objekte auf <x> setzen
EXEL016=\  -Xmnx<x>        Maximalgr\u00f6\u00dfe f\u00fcr Speicherbereich f\u00fcr neue Objekte auf <x> setzen
EXEL015=\  -Xmns<x>        Anfangsgr\u00f6\u00dfe f\u00fcr Speicherbereich f\u00fcr neue Objekte auf <x> setzen
EXEL014=\  -Xmn<x>         Anfangs-/Maximalgr\u00f6\u00dfe f\u00fcr Speicherbereich f\u00fcr neue Objekte auf <x> setzen
EXEL013=\  -Xmn<x>         Gr\u00f6\u00dfe f\u00fcr Speicherbereich f\u00fcr neue Objekte auf <x> setzen
EXEL012=\  -Xmco<x>        Inkrement f\u00fcr ROM-Klassensegment auf <x> setzen
EXEL011=\  -Xmca<x>        Inkrement f\u00fcr RAM-Klassensegment auf <x> setzen
EXEL010=Werte mit dem Suffix "k" (Kilo) oder "m" (Mega) werden entsprechend umgerechnet. \n
SHRC148=Gruppenzugriff auf Cache erlauben (standardm\u00e4\u00dfig Benutzerzugriff)
J9RI009=jvmri->GetRasInfo kann keinen Speicher zuordnen.
SHRC147=Zeichen %.*s ist f\u00fcr den Cachenamen nicht g\u00fcltig.
J9RI008=jvmri->GetRasInfo kann keine Komponenten abrufen.
SHRC146=Klasse %1$s wird im gemeinsam genutzten Cache f\u00fcr Klassenladeprogramm-ID %2$d mit Token %4$.*3$s gesucht...
J9RI007=jvmri->GetRasInfo kann keinen Speicher zuordnen.
SHRC145=Klasse %1$s wird im gemeinsam genutzten Cache f\u00fcr Klassenladeprogramm-ID %2$d mit URL %4$.*3$s gesucht...
J9RI006=jvmri->GetRasInfo mit leerer RasInfo-Struktur aufgerufen.
SHRC144=Klasse %2$.*1$s wird im gemeinsam genutzten Cache f\u00fcr Klassenladeprogramm-ID %3$d mit Token %5$.*4$s gespeichert...
J9RI005=jvmri->GetComponentDataArea-Komponente %s hat keinen Datenbereich unter dieser VM.
SHRC143=Klasse %2$.*1$s wird im gemeinsam genutzten Cache f\u00fcr Klassenladeprogramm-ID %3$d mit URL %5$.*4$s gespeichert...
J9RI004=jvmri->DynamicVerbosegc nicht unterst\u00fctzt.
SHRC142=\tbei 0x%1$p\t\t%2$x \!\= %3$x
J9RI003=Speicherauszugsagent kann in jvmri->DumpRegister nicht zugeordnet werden. Funktion nicht registriert.
SHRC141=abweichende Byte\:
J9RI002=jvmri->DumpRegister mit leerem  Callback aufgerufen. Funktion nicht registriert.
EXEL009=\nArgumente f\u00fcr die folgenden Optionen werden in Byte angegeben.
SHRC140=Gr\u00f6\u00dfe\:\t%1$d\t\t\t%2$d\n
J9RI001=Interner Fehler beim Entfernen des Speicherauszugsagenten in jvmri->DumpDeregister. Die Registrierung der Funktion wird eventuell nicht zur\u00fcckgenommen.
EXEL008=\  -Xfuture        strengste \u00dcberpr\u00fcfungen aktivieren (k\u00fcnftige Standardeinstellung)
J9RI000=jvmri->CreateThread kann keinen Speicher f\u00fcr Thread-Argumente zuordnen.
EXEL007=\  -Xnoaot         vorkompilierten Code nicht ausf\u00fchren
EXEL006=\  -Xnojit         JIT inaktivieren
EXEL005=\  -Xint           nur interpretierten Code ausf\u00fchren (\u00e4quivalent zu -Xnojit -Xnoaot)
EXEL004=\n  -Xrun<dll>[\:Optionen]      JVMPI-Profilerstellung starten \n
EXEL003=\  -Xbootclasspath/a\:<Pfad>  <Pfad> an den Klassenpfad des Bootprogramms anf\u00fcgen
EXEL002=\  -Xbootclasspath/p\:<Pfad>  <Pfad> dem Klassenpfad des Bootprogramms voranstellen
EXEL001=\  -Xbootclasspath\:<Pfad>    Klassenpfad des Bootprogramms auf <Pfad> setzen
EXEL000=Die folgenden Optionen sind keine Standardoptionen und k\u00f6nnen ohne Ank\u00fcndigung ge\u00e4ndert werden. \n
JDBG021=Nicht erkannte Debugging-Option
JDBG020=Nicht erkannte Debugging-Option\: '%s'
SHRC139=\n\tGespeicherte ROM-Klasse \tROM-Klasse im Cache
SHRC138=FEHLER\: Mehrere verwaiste Elemente in ROM-Klasse f\u00fcr %.*s gefunden.
SHRC137=SICHERER MODUS\: Warnung\: ROM-Klasse %.*s entspricht nicht der ROM-Klasse im Cache.
SHRC136=FEHLER\: Monitor in SH_ROMClassManagerImpl kann nicht erstellt werden.
SHRC135=FEHLER\: Hashtabelle in SH_ROMClassManagerImpl konnte nicht erstellt werden.
SHRC134=FEHLER\: Pool in SH_ROMClassManagerImpl konnte nicht erstellt werden.
SHRC133=FEHLER\: ROMClassManager-Hashtabellen-Mutex kann nicht eingegeben werden.
SHRC132=FEHLER\: Speicher f\u00fcr Hashtabelleneintrag in ROMClassManagerImpl kann nicht reserviert werden.
SHRC131=FEHLER\: Speicher f\u00fcr verkn\u00fcpften Listeneintrag in ROMClassManagerImpl kann nicht reserviert werden.
SHRC130=FEHLER\: Es wurde eine Zuordnung versucht, w\u00e4hrend die COMMIT-Operation noch ansteht.
JDBG019=Nicht sortierte Verlagerungsliste %zx
JDBG018=Nicht erkannte Debugging-Option wird ignoriert
JDBG017=Nicht erkannte Debugging-Option wird ignoriert\: '%s'
JDBG016=jvm-Zuordnung ist fehlgeschlagen.
JDBG015=Debugger f\u00fcr Antwortserver ausf\u00fchren
JDBG014=vm->debuggerClassReferences-Pool kann nicht zugeordnet werden.
JDBG013=vm->debuggerReferences-Pool kann nicht zugeordnet werden.
JDBG012=j9dbg_init_server ist fehlgeschlagen.
JDBG011=debugServer kann nicht zugeordnet werden.
JDBG010=Beispiel\: java -Xrunjdwp\:transport\=dt_socket,address\=localhost\:8000\n
SHRC129=FEHLER\: Es wurde versucht, readerCount auf -1 zu setzen\!
SHRC128=SH_CompositeCache\:\:exitMutex ist mit R\u00fcckkehrcode %d fehlgeschlagen.
SHRC127=SH_CompositeCache\:\:enterMutex ist mit R\u00fcckkehrcode %d fehlgeschlagen.
SHRC126=FEHLER\: Es wurde angefordert, ClasspathItem zu viele Elemente hinzuzuf\u00fcgen.
SHRC125=FEHLER\: Speicher f\u00fcr Zeichenfolgepuffer in SH CacheMap konnte nicht reserviert werden.
SHRC124=Cache ist %1$d%% voll. \n
SHRC123=%% Veraltete Klassen   \= %1$d%%\n
SHRC122=\# Veraltete Klassen   \= %d
SHRC121=\# Token               \= %d
SHRC120=\# URLs                \= %d
JDBG009=j9methodids\=y|n                 j9-Methoden-IDs verwenden          n\n
JDBG008=onuncaught\=y|n                  Debugger bei nicht abgefangenen? n
JDBG007=onthrow\=<Ausnahmebedingungsname> Debugger bei Ausl\u00f6sung         kein
JDBG006=server\=y|n                      Empfangsbereit f\u00fcr Debugger?    n
JDBG005=address\=<\u00fcberwachte/angeh\u00e4ngte Adresse> Transportspezifikationen "localhost\:8888"
JDBG004=transport\=<Name>                Transportspezifikationen        keine
JDBG003=suspend\=y|n                     Auf Start warten?               j
JDBG002=---------------------           -----------                     -------
JDBG001=Optionsname und -wert           Beschreibung                    Standard
JDBG000=Syntax von -Xrunjdwp\: -Xrunjdwp\:[help]|[<Option>\=<Wert>, ...]\n
SHRC119=\# Klassenpfade        \= %d
SHRC118=\# ROM-Klassen         \= %d
SHRC117=Metadaten %% verwendet \= %1$d%%\n
SHRC116=Metadaten-Byte        \= %d
SHRC115=ROM-Klassen-Byte      \= %d
SHRC114=freie Byte            \= %d
SHRC113=Cachegr\u00f6\u00dfe            \= %d
SHRC112=allocPtr              \= 0x%p\n
SHRC111=endAddress            \= 0x%p
SHRC110=\nbaseAddress           \= 0x%p
EXEX022=ROM-Image kann nicht aus JXE-Datei geladen werden.
EXEX021=Fehler beim Laden des JXE-Relocators\: %1$s (%2$s)
EXEX020=Erforderlicher Export fehlt.
SHRC109=\!VERALTET\!
SHRC108=\t%.*s
SHRC107=\t%.*s
SHRC106=%1$d\: 0x%2$p TOKEN
SHRC105=%1$d\: 0x%2$p URL
SHRC104=%1$d\: 0x%2$p KLASSENPFAD
SHRC103=\tToken 0x%p
SHRC102=\tURL 0x%p
SHRC101=\tIndex %1$d in Klassenpfad 0x%2$p
SHRC100=%1$d\: 0x%2$p ROM-KLASSE\: %4$.*3$s bei 0x%5$p.
CDRT002=Fehlschlag auf dem PC\: %p (Offset %p), metaData \= %p
CDRT001=Methode\: %.*s.%.*s%.*s (%p)
CDRT000=Es kann keine JIT-Stackzuordnung gefunden werden. VM wird abgebrochen.
EXEX019=Zugeordnete logische Adresse \= 0x%1$X f\u00fcr physikalische Adresse bei 0x%2$X und mit Gr\u00f6\u00dfe 0x%3$X
EXEX018=jxeaddr-Position 0x%1$08X liegt nicht im zul\u00e4ssigen Bereich von 0x%2$08X bis 0x%3$08X.
EXEX017=Fehler beim Zuordnen der JXE-Datei in der FLASH-Aktualisierung
EXEX016=Ung\u00fcltige jxespace-Parameter
EXEX015=Fehler beim VM-Start\: Nicht gen\u00fcgend Speicherkapazit\u00e4t
EXEX014=Mit %s -help kann die Syntax angezeigt werden.
EXEX013=Interner VM-Fehler\: Java VM konnte nicht erstellt werden.
EXEX012=Option -jar ist f\u00fcr diese Klassenbibliothek nicht verf\u00fcgbar.
EXEX011=Fehler beim Laden der JXE-Datei\: %s
EXEX010=%s erfordert einen Parameter.
PORT018=Operation ist fehlgeschlagen\: %1$d (%2$s ist fehlgeschlagen\: %3$d)
PORT017=Operation ist fehlgeschlagen\: %d
PORT016=Interner Fehler %i
PORT015=DLL-Referenzen k\u00f6nnen nicht aufgel\u00f6st werden. M\u00f6glicherweise fehlt eine vorausgesetzte DLL.
PORT014=DLL nicht gefunden
PORT013=DLL-Tabelle nicht gefunden
PORT012=Fehler\: PACE-Bit wurde in 68 K-Funktion gesetzt.
VERB014=Maximaler Speicher
PORT011=Nicht gen\u00fcgend Speicherkapazit\u00e4t
VERB013=Inkrement f\u00fcr ROM-Klassensegment
PORT010=Berechtigung verweigert
VERB012=Inkrement f\u00fcr RAM-Klassensegment
VERB011=Stackgr\u00f6\u00dfe des Java-Threads
VERB010=Maximalstackgr\u00f6\u00dfe des Java-Threads
EXEX009=\  -verify          Pr\u00fcfung der Klassendatei aktivieren \n  -X               Hilfe zu den vom Standard abweichenden Optionen ausgeben
EXEX008=\  -verbose[\:class,gc,stack,sizes]\n                   ausf\u00fchrliche Ausgabe aktivieren (Standardeinstellung\=class)\n
EXEX007=\  -jcl\:<Konfiguration>[\:Optionen]\n                   zu verwendende JCL-DLL angeben (z. B. cdc, cldc, ...).\n
EXEX006=\  -debug\:<Optionen> Debugging aktivieren, JDWP-Standard<optionen> \n
EXEX005=\  -D<Merkmal>\=<Wert>   Wert eines Systemmerkmals festlegen \n
EXEX004=\  -jxespace\:<Physische Adresse>,<Gr\u00f6\u00dfe>,<Logische Adresse> \n                   Speicherbereich f\u00fcr JXE-Dateien zuordnen (hexadezimale Werte) \n  -jxeaddr\:<Logische Adresse>\n                   JXE-Datei direkt aus dem Speicher ausf\u00fchren (hexadezimale Adresse)
EXEX003=\  -jxe\:<JXE-Datei>   angegebene JXE-Datei ausf\u00fchren
EXEX002=\n[Optionen]\n  -classpath <Pfad>\n  -cp <Pfad>       Klassenpfad auf <Pfad> setzen
EXEX001=Syntax\:\t%s [Optionen] -jxe\:<JXE-Datei> [Argumente...]
EXEX000=Syntax\:\t%s [Optionen] Klassenname [Argumente...]
PORT009=Datei nicht gefunden
PORT008=Falsche Modularchitektur
PORT007=Kein Modul
VERB009=Inkrement f\u00fcr Java-Thread-Stack
PORT006=Falsches Modulformat
VERB008=Anfangsstackgr\u00f6\u00dfe des Java-Threads
PORT005=Modul konnte nicht geladen werden.
VERB007=Stackgr\u00f6\u00dfe des Betriebssystem-Threads
PORT004=Fehler bei der Symbolaufl\u00f6sung
VERB006=Initialisierung ist fehlgeschlagen.
PORT003=Abh\u00e4ngiges Modul %s konnte nicht geladen werden.
VERB005=Fehler\: -Xverbosegclog fehlender Dateiname
PORT002=Unbekannter Fehler beim Laden der gemeinsam genutzten Bibliothek
VERB004=Fehler\: -Xverbosegclog Anzahl der Zyklen muss gr\u00f6\u00dfer als 0 sein.
PORT001=Speicher konnte nicht zugeordnet werden.
VERB003=Fehler\: -Xverbosegclog Anzahl der Dateien muss gr\u00f6\u00dfer als 0 sein.
VERB002=Ausf\u00fchrlicher Stack\: maximale Stackbelegung betrug %1$zd/%2$zd Byte in Java/C-Stacks.
VERB001=(nicht benannter Thread)
VERB000=Ausf\u00fchrlicher Stack\: "%2$.*1$s" belegte %3$zd/%4$zd Byte in Java/C-Stacks.
J2JX099=Unvollst\u00e4ndige Option(en) in Befehlszeile. Erste Option\: %s
J2JX098=Ung\u00fcltiges Argument [%1$s] f\u00fcr Option\: %2$s
J2JX097=Nicht erkannte Option(en) in Befehlszeile. Erste Option\: %s
J2JX096=Funktion j9bcv_verifyCreateStackAttributes konnte nicht gefunden werden.
J2JX095=Funktion j9bcv_verifyClassStructure konnte nicht gefunden werden.
J2JX094=Pr\u00fcf-DLL %1$s konnte nicht ge\u00f6ffnet werden\: %2$s
J2JX093=Keine Klassendateien in der Befehlszeile angegeben
J2JX092=Interner Fehler mit neu erstellter VM
J2JX091=Java-VM wurde erfolgreich erstellt.
J2JX090=Es wurde versucht, Java VM zur Verwendung mit AOT zu erstellen.
DUMP018=Angefordertes Ereignis ist nicht verf\u00fcgbar\: mit Flag -Xdump\:dynamic ausf\u00fchren
DUMP017=Abbruch\: Datei (%s) kann nicht komprimiert werden.
J2JX089=Interner Fehler\: %1$s konnte in %2$s nicht gefunden werden.
DUMP016=Abbruch\: Datei (%s) kann nicht erstellt werden.
J2JX088=Interner Fehler\: %1$s konnte nicht ge\u00f6ffnet werden\: %2$s
DUMP015=Abbruch\: Kann nicht ge\u00f6ffnet oder gelesen werden (%s).
J2JX087=Interner Fehler\: Name der ausf\u00fchrbaren Datei konnte nicht ermittelt werden.
DUMP014=VM-Aktion nicht erkannt\: ...%s
J2JX086=%1$i Byte wurden in die Symboldatei %2$s geschrieben.
DUMP013=Speicherauszugereignis "%1$s", Detail "%3$.*2$s" wurde verarbeitet.
J2JX085=Interner Fehler\: nicht unterst\u00fctzter Fehlercode beim Erstellen der ROM-Klasse %d
DUMP012=Fehler in Speicherauszug von %1$s\: %2$s
J2JX084=Segment %d wird geschlossen und ein neues Segment wird gestartet.
DUMP011=Speicherauszug von %1$s startete Prozess %2$d
J2JX083=%s wird in die AOT aufgenommen.
DUMP010=Speicherauszug von %1$s geschrieben auf %2$s
J2JX082=%s wird von der AOT ausgeschlossen.
J2JX081=Fehler\: %s
J2JX080=Pr\u00fcffehler bei Methode %1$i (%3$.*2$s%5$.*4$s) auf PC %6$i
DUMP009=Speicherauszug von %s nicht verf\u00fcgbar
DUMP008=unter Verwendung von '%s'
DUMP007=JVM fordert einen Speicherauszug von %1$s unter Verwendung von '%2$s' an.
J2JX079=Fehler\: %1$s bei %2$i
DUMP006=Verarbeitung von Speicherauszugsereignis "%1$s", Detail "%3$.*2$s" - Bitte warten.
J2JX078=Empfohlene Ma\u00dfnahme\:
DUMP005=Fehlende ausf\u00fchrbare Datei
J2JX077=Ung\u00fcltige Klassendatei
DUMP004=Fehlender Dateiname
J2JX076=Ung\u00fcltige Klassendatei\: %s
DUMP003=Benannter Speicherauszug nicht erkannt\: %s
J2JX075=Name des Eintrags ist zu lang\: %s
DUMP002=Kennsatzfeld nicht erkannt\: %%%1$c
J2JX074=Es wurde versucht, der JXE-Datei einen doppelten Eintrag hinzuzuf\u00fcgen\: %s
DUMP001=Speicherauszugsereignis nicht erkannt\: ...%s
J2JX073=Verzeichnis, in dem die Datei verarbeitet wird\: %s
DUMP000=Speicherauszugsoption nicht erkannt\: -Xdump\:%s
J2JX072=Verzeichnis %s konnte nicht ge\u00f6ffnet werden.
J2JX071=Verzeichnis wird verarbeitet\: %s
J2JX070=Speicherbereich erh\u00f6hen auf\: %i Byte
J2JX069=Gesch\u00e4tzte Hauptspeichergr\u00f6\u00dfe\: %i Byte
J2JX068=Dateigr\u00f6\u00dfe\: %i Byte
J2JX067=Keine g\u00fcltige Klasse in %s gefunden.
J2JX066=Datei konnte nicht ge\u00f6ffnet werden\: %s
J2JX065=Fehler beim Schlie\u00dfen der ZIP-Datei %s
J2JX064=Die g\u00fcltigen Werte f\u00fcr die Option -precompileTarget sind\:
J2JX063=Standardeinstellungen sind\:
J2JX062=Klassendatei(en)                beliebige Anzahl Dateien mit der Endung .class, .jar, oder .zip \n werden untersucht und der JXE-Datei hinzugef\u00fcgt \n
J2JX061=Optionen f\u00fcr Ahead-of-time-Kompilierung\:\n  -[no]precompile           [nicht] alle Methoden f\u00fcr Vorkompilierung markieren\n  -[no]precompileMethod xxx benannte Methoden [nicht] f\u00fcr Vorkompilierung markieren\n  -[no]compileAheadOfTime   markierte Methode [nicht] vorab kompilieren\n  -precompileTarget xxx     JXE-Datei f\u00fcr Zielarchitektur und Betriebssystem xxx generieren\n  -precompileOptions xxx    xxx an die Vorkompilierungssteuerkomponente \u00fcbergeben\n  -[no]precompileResolve    [nicht] versuchen, externe Referenzen w\u00e4hrend der Vorkompilierung aufzul\u00f6sen\n  -[no]stripBytecode        Bytecode f\u00fcr kompilierte AOT-Methoden [nicht] entfernen \n
J2JX060=\  -j2se                     diese Option angeben, wenn jar2jxe in einer J2SE-Umgebung verwendet wird\n
J2JX059=\  -[no]tools                das Verzeichnis 'tools' wird der Liste der Erweiterungsverzeichnisse [nicht] hinzugef\u00fcgt
J2JX058=\  -padJxe                   JXE-Datei am Ende mit xxx zus\u00e4tzlichen Byte auff\u00fcllen
J2JX057=\  -[no]segmented            [keine] mehrfach segmentierte[n] JXE-Dateien generieren \n  -maxSegmentSize xxx       max. Gr\u00f6\u00dfe f\u00fcr jede segmentierte JXE-Datei (Hexadezimalzahl) \n  -maxSegmentSize seg\=xxx   max. Gr\u00f6\u00dfe f\u00fcr bestimmte segmentierte JXE-Dateien (Hexadezimalzahl) \n  -locate xxx               Image f\u00fcr Adresse xxx (Hexadezimalzahl) lokalisieren \n  -locate seg\=xxx           Image eines Segments f\u00fcr Hexadezimaladresse xxx lokalisieren
J2JX056=\  -fileExtension xxx        Dateien mit der Dateierweiterung .xxx als JAR-Dateien behandeln
J2JX055=\  -vmOption xxx             vmOption xxx beim Ausf\u00fchren der JXE-Datei verwenden
J2JX054=\  -versionName xxx          Versionsname der JXE-Datei auf xxx setzen
J2JX053=\  -description xxx          Beschreibung der JXE-Datei auf xxx setzen
J2JX052=\  -uuid xxx                 UUID der JXE-Datei auf xxx setzen
J2JX051=\  -D xxx\=yyy                Systemmerkmal xxx auf yyy setzen
J2JX050=\  -startupClass xxx         Startklasse auf xxx setzen\n  -noStartupClass           angeben, dass die JXE-Datei \u00fcber keine Startklasse verf\u00fcgt
J2JX049=\  -srcDir xxx               alle Dateien in der Verzeichnisstruktur xxx einschlie\u00dfen
J2JX048=\  -outputFormat xxx         Ausgabeformat auf xxx (c, bin oder jar) setzen
J2JX047=\  -o xxx                    Dateiname der Basisausgabe auf xxx setzen
J2JX046=\  -be                       Big Endian-Ausgabe generieren \n  -le                       Little Endian-Ausgabe generieren
J2JX045=\  -version                  Version dieses Programms ausgeben
J2JX044=\  -[no]profile              PRF-Datei f\u00fcr Profilerstellung [nicht] generieren
J2JX043=\  -[no]g                    SYM-Datei f\u00fcr Debugging [nicht] generieren
J2JX042=\  -[no]verify               Klassendateiformat [nicht] pr\u00fcfen
J2JX041=\  -q                        Modus f\u00fcr ger\u00e4uscharmen Druck\n  -[no]logo                 Copyright-Information [nicht] ausgeben \n  -verbose                  ausf\u00fchrlicher Modus
J2JX040=Syntax\:\t%s [Optionen] Klassendatei(en)\n\n[Optionen]\n  -help, -?                 Syntax ausgeben
J2JX039=IBM ist eine eingetragene Marke der IBM Corporation. \nJava und alle Java-basierten Marken und Logos sind Marken oder eingetragene \nMarken von Sun Microsystems, Inc.
J2JX038=Lizenziertes Material - Eigentum von IBM
J2JX037=Methode konnte nicht kompiliert werden\: %2$.*1$s/%4$.*3$s%6$.*5$s
J2JX036=Ziel\: %s\n
J2JX035=(c) Copyright IBM Deutschland GmbH. 1991, 2005  Alle Rechte vorbehalten.
J2JX034=J9 Java(TM) JAR to JXE Version %s
J2JX033=Interner Fehler\: Fehlerhafte ROM-Klasse konnte nicht korrekt erstellt werden.
J2JX032=Unpaarige Anf\u00fchrungszeichen in Parameterliste
J2JX031=Verarbeitung der JAR-Datei abgeschlossen\: %s
J2JX030=Fehler beim Lesen von %1$s aus %2$s
J2JX029=%s wird verarbeitet.
J2JX028=Fehler beim Lesen eines Eintrags von %s
J2JX027=%s konnte nicht ge\u00f6ffnet oder gelesen werden.
J2JX026=Segment %d passte nicht in die erforderliche maximale Segmentgr\u00f6\u00dfe.
J2JX025=Es wurde versucht, der JXE-Datei %s eine doppelte Klasse hinzuzuf\u00fcgen.
J2JX024=Klassendatei wurde hinzugef\u00fcgt\: %s
J2JX023=Es wird versucht, eine Klassendatei hinzuzuf\u00fcgen\: %s
J2JX022=%s ist ung\u00fcltig.
J2JX021=%1$s konnte nicht geladen werden\: %2$s
J2JX020=ncpRef [%1$x] wird von %2$u Eintr\u00e4gen auf %3$u Eintr\u00e4ge vergr\u00f6\u00dfert.
J2JX019=Puffer [%1$x] wird von %2$u auf %3$u vergr\u00f6\u00dfert.
J2JX018=%s wurde erfolgreich erstellt.
J2JX017=Das Schreiben der Daten in die Datei ist fehlgeschlagen\: %s
J2JX016=Datei konnte nicht erstellt/gel\u00f6scht werden\: %s
J2JX015=Unbekannter Fehlercode\: %d
J2JX014=AOT-Initialisierung ist fehlgeschlagen.
J2JX013=Interner Fehler\: Endian-Spiegelung ist fehlgeschlagen.
J2JX012=Angegebene UUID ist ung\u00fcltig.
J9CL014=%1$s\: nicht erkannte Option --> '%2$s'
J2JX011=Interner Fehler\: ZIP-Eintrag wurde nicht geschlossen
J9CL013=Betriebssystemmonitor konnte nicht zugeordnet werden.
J2JX010=Interner Fehler\: Lesevorgang ist fehlgeschlagen.
J9CL011=Betriebssystem-Thread konnte nicht verzweigt werden.
J9CL010=JNIEnv konnte nicht zugeordnet werden.
J2JX009=Interner Fehler\: Suche ist fehlgeschlagen.
J2JX008=Interner Fehler\: keine Eintr\u00e4ge
J2JX007=Interner Fehler\: doppelter Eintrag
J9CL009=Thread bereits gestartet.
J2JX006=Nicht gen\u00fcgend Speicherkapazit\u00e4t.
J9CL008=In Nanosekunden angegebener Zeitlimitwert liegt au\u00dferhalb des g\u00fcltigen Bereichs.
J2JX005=Interner Fehler\: nicht \u00fcbereinstimmende Gr\u00f6\u00dfe
J9CL007=Zeitlimitwert ist negativ.
J9CL006=Keine vorab zu pr\u00fcfenden Daten f\u00fcr java/lang/Object
J2JX004=Interner Fehler\: CRC-Abweichung
J9CL005=Inkompatible Klassenbibliotheksversion\: VM Version %1$i ist erforderlich, Version %2$i wurde identifiziert.
J2JX003=Interner Fehler\: falsches Funktionsargument
J9CL004=Inkompatible Klassenbibliotheksversion\: JCL Version %1$i wurde erwartet, Version %2$i wurde identifiziert.
J2JX002=%1$d von %2$d Methoden f\u00fcr Ziel %3$s vorkompiliert.
J9CL003=Inkompatible Klassenbibliotheksversion\: JCL %1$x, VM %2$x
J2JX001=Gespeicherte Ressource\: %s
J9CL002=Klassen stammen nicht aus einer J9-Bibliothek, oder sie stammen aus einer nicht korrekt reduzierten JXE-Datei
J2JX000=Es wurde versucht, eine doppelte Ressourcendatei [%s] hinzuzuf\u00fcgen. Die Datei wurde ignoriert.
J9CL001=Versuchen Sie die Ausf\u00fchrung mit -jcl\:%s.
J9CL000=Inkompatible Klassenbibliothek
J9GC041=Unbekannter fvtest-Typ\: %s
J9GC040=Unbekannte Option\: %s
J9GC039=*** %1$s ist veraltet. Verwenden Sie statt dessen %2$s. ***
J9GC038=Der angegebene Wert %s ist zu gro\u00df.
J9GC037=%1$s wird nicht mit anderen Werten als %2$zu unterst\u00fctzt.
J9GC036=Wert %1$s muss \u00fcber %2$zu liegen.
J9GC035=Auf %s muss eine Zahl folgen.
J9GC034=Wert %1$s muss zwischen %2$zu und %3$zu (einschlie\u00dflich) liegen.
J9GC033=Wert %1$s muss zwischen %2$f und %3$f (einschlie\u00dflich) liegen.
J9GC032=Systemkonfiguration unterst\u00fctzt Option '%s' nicht.
J9GC031=Optionsfehler\: '%1$s' und '%2$s' k\u00f6nnen nicht gleichzeitig angegeben werden.
J9GC030=Wert %1$s von %2$f muss mindestens %3$s kleiner sein als der Wert %4$s von %5$f.
J9GC029=Optionsfehler\: '%s'
J9GC028=Option zu gro\u00df\: '%s'
J9GC027=Fehlerhafte Option\: '%s'
J9GC026=-Xverbosegclog konnte keine internen Strukturen zuordnen.
J9GC025=Summe von %1$s und %2$s
J9GC024=Die Summe von %1$s und %2$s ist zu gro\u00df f\u00fcr den Freispeicher.
J9GC023=Die Summe von %1$s und %2$s muss gleich %3$s sein.
J9GC022=Die Summe von %1$s und %2$s ist zu gro\u00df f\u00fcr %3$s.
J9GC021=%1$s muss gleich %2$s sein.
J9GC020=%s ist zu gro\u00df f\u00fcr den Freispeicher.
JITM000=Nicht unterst\u00fctzte Hardware [%d]
J9GC019=%1$s ist zu gro\u00df f\u00fcr %2$s.
JNCK087=JNI-Fehler in %1$s\: Argument \#%2$d ist nicht java/lang/reflect/Method oder java/lang/reflect/Constructor.
J9GC018=%1$s ist zu klein f\u00fcr %2$s.
JNCK086=JNI-Warnung in %1$s\: Argument \#%2$d ist nicht java/nio/Buffer. %3$s gibt einen Fehlercode zur\u00fcck.
J9GC017=%1$s ist zu klein; muss mindestens %2$zu %3$sbyte gro\u00df sein.
JNCK085=Information in JNI_OnLoad der Bibliothek %.*s festgestellt\n
J9GC016=Noch aktives Segment konnte in Standardspeicherbereich nicht zugeordnet werden.
JNCK084=Warnung in JNI_OnLoad der Bibliothek %.*s festgestellt\n
J9GC015=Standardspeicherbereich konnte nicht zugeordnet werden.
JNCK083=Fehler in JNI_OnLoad der Bibliothek %.*s festgestellt\n
J9GC014=VM-Klassenspeichersegmente konnten nicht zugeordnet werden.
JNCK082=Information im \u00e4u\u00dfersten Frame eines zugeordneten Threads festgestellt\n
J9GC013=VM-Objektspeichersegmente konnten nicht zugeordnet werden.
JNCK081=Warnung im \u00e4u\u00dfersten Frame eines zugeordneten Threads festgestellt\n
J9GC012=VM-Speichersegmente konnten nicht zugeordnet werden.
JNCK080=Fehler im \u00e4u\u00dfersten Frame eines zugeordneten Threads festgestellt\n
J9GC011=Pool von Speicherbereichen konnte nicht initialisiert werden.
J9GC010=Finalizer-Verwaltung konnte nicht initialisiert werden.
JNCK079=Information in %2$.*1$s.%4$.*3$s%6$.*5$s festgestellt\n
JNCK078=Warnung in %2$.*1$s.%4$.*3$s%6$.*5$s festgestellt\n
J9GC009=Mutex f\u00fcr GC-Statistik konnte nicht initialisiert werden.
JNCK077=Fehler in %2$.*1$s.%4$.*3$s%6$.*5$s festgestellt\n
J9GC008=Modulerweiterungen konnten nicht initialisiert werden.
JNCK076=Interner jnichk-Fehler in %s\: Nicht gen\u00fcgend Speicherkapazit\u00e4t
J9GC007=Initialisierung ist fehlgeschlagen. Befehlszeile wird syntaktisch analysiert.
JNCK075=Interner jnichk-Fehler in %1$s\: Nicht erkannter Deskriptor 0x%2$x
J9GC006=Initialisierung ist fehlgeschlagen. Nicht gen\u00fcgend Speicherkapazit\u00e4t.
JNCK074=JNI-Information in %s\: Puffer scheint unver\u00e4ndert zu sein. Sie k\u00f6nnen auch JNI_ABORT statt Modus 0 verwenden.
J9GC005=Initialisierung ist fehlgeschlagen.
JNCK073=JNI-Information in %1$s\: JNI_ABORT wurde angegeben, kann jedoch nicht ber\u00fccksichtigt werden, da die Daten ge\u00e4ndert wurden.\n(Urspr\u00fcnglicher CRC\=0x%2$x, neuer CRC\=0x%3$x).\nDa %4$s den tats\u00e4chlichen Feldgruppeninhalt zur\u00fcckgab, werden die \u00c4nderungen nicht verworfen. Dies ist eventuell nicht das gew\u00fcnschte Resultat.
J9GC004=Globaler Garbage-Collector konnte nicht instanziert werden.
JNCK072=JNI-Information in %1$s\: JNI_COMMIT wurde angegeben, wird jedoch ignoriert.\nDa %2$s den tats\u00e4chlichen Feldgruppeninhalt zur\u00fcckgab, wird der Puffer nach diesem Aufruf ung\u00fcltig. Dies ist eventuell nicht das gew\u00fcnschte Resultat.
J9GC003=Task-Dispatcher konnte nicht instanziert werden.
JNCK071=JNI-Warnung\: Der von %2$s angeforderte Speicher bei 0x%1$p wurde vor der R\u00fcckkehr aus dem nativen Modus nicht freigegeben. Dies ist wahrscheinlich ein Speicherverlust.
J9GC002=Freispeicher konnte nicht instanziert werden. %1$zu%2$s angefordert.
JNCK070=JNI-Warnung in %1$s\: Urspr\u00fcngliche Feldgruppendaten wurden zwischen %2$s und %3$s ge\u00e4ndert.\n(Urspr\u00fcnglicher CRC\=0x%4$x, neuer CRC\=0x%5$x).\nDa %6$s eine Kopie des Feldgruppeninhalts zur\u00fcckgab, geht der neue Inhalt verloren.
J9GC001=Freispeicher konnte nicht instanziert werden.
J9GC000=Interner Fehler\: Nicht gen\u00fcgend Speicherkapazit\u00e4t
SHRC099=%1$d\: 0x%2$p VERWAISTES ELEMENT\: %4$.*3$s bei 0x%5$p.
SHRC098=\nAktuelle Statistik f\u00fcr Cache %s\: \n
SHRC097=FEHLER\: Gemeinsam genutzter Cache "%s" ist besch\u00e4digt. Neuen JVMs d\u00fcrfen keine Verbindung zum Cache herstellen. \n\tVorhandene JVMs k\u00f6nnen weiterhin arbeiten, allerdings den Cache nicht aktualisieren.
SHRC096=WARNUNG\: Gemeinsam genutzter Cache "%s" ist voll.
SHRC095=FEHLER\: Versuche, markStale f\u00fcr Elementen des gemeinsam genutzten Caches aufzurufen, sind fehlgeschlagen.
SHRC094=FEHLER\: Verwaistes Element identifiziert, aber lokale ROM-Klasse an addROMClassToCache \u00fcbergeben.
SHRC093=INFO\: Unerwartete Beendigung einer anderen JVM w\u00e4hrend der Aktualisierung erkannt
SHRC092=FEHLER\: ADD-Fehler beim Lesen des Caches
SHRC091=FEHLER\: Besch\u00e4digte Daten f\u00fcr Element 0x%p (ung\u00fcltiger Datentyp) gelesen.
SHRC090=FEHLER\: Cache-Mutex in SH_CacheMap-Start konnte nicht abgerufen werden.
JNCK069=JNI-Warnung in %1$s\: Ende liegt au\u00dferhalb des g\u00fcltigen Bereichs (%2$d + %3$d > %4$d).
JNCK068=JNI-Warnung in %1$s\: Start oder Index liegt au\u00dferhalb des g\u00fcltigen Bereichs (%2$d >\= %3$d).
JNCK067=JNI-Warnung in %1$s\: Negative Bereichsl\u00e4nge (%2$d) angegeben.
JNCK066=JNI-Warnung in %1$s\: Negativer Start oder Index (%2$d) angegeben.
JNCK065=JNI-Warnung in %1$s\: Kapazit\u00e4t des Frames f\u00fcr lokale Verweise wuchs automatisch von %2$d auf %3$d.\n%4$d Verweise sind im Gebrauch.\nVergr\u00f6\u00dfern Sie den Frame explizit mit EnsureLocalCapacity oder PushLocalFrame.
JNCK064=JNI-Warnung in %1$s\: Kapazit\u00e4t des Pools f\u00fcr globale schwache Verweise wuchs automatisch von %2$d auf %3$d.\nDies kann ein Anzeichen f\u00fcr einen Speicherverlust sein.
JNCK063=JNI-Warnung in %1$s\: Kapazit\u00e4t des Pools f\u00fcr globale Verweise wuchs automatisch von %2$d auf %3$d.\nDies kann ein Anzeichen f\u00fcr einen Speicherverlust sein.
JNCK062=JNI-Warnung in %s\: Diese Funktion sollte nicht in einem kritischen Abschnitt aufgerufen werden.
JNCK061=JNI-Warnung in %1$s\: Argument \#%2$d ist eine fehlerhafte Feldsignatur ("%3$s").
JNCK060=JNI-Warnung in %1$s\: Argument \#%2$d ist eine fehlerhafte Methodensignatur ("%3$s").
SHRC089=FEHLER\: Aktualisierungs-Mutex in SH_CacheMap kann nicht erstellt werden.
SHRC088=FEHLER\: Cache als ROMImageSegment in SH_CacheMap konnte nicht erstellt werden.
SHRC087=FEHLER\: MarkStale ist w\u00e4hrend ClasspathManager\:\:update() fehlgeschlagen.
SHRC086=FEHLER\: ClasspathManager-Hashtabellen-Mutex kann nicht eingegeben werden.
SHRC085=FEHLER\: Speicher f\u00fcr Header des verkn\u00fcpften Listeneintrags kann nicht reserviert werden.
SHRC084=FEHLER\: Speicher f\u00fcr verkn\u00fcpften Listeneintrag kann nicht reserviert werden.
SHRC083=FEHLER\: Speicher f\u00fcr identifiedClasspaths-Feldgruppe in SH_ClasspathManagerImpl2 kann nicht reserviert werden.
SHRC082=FEHLER\: identifiedMutex in SH ClasspathManagerImpl2 kann nicht erstellt werden.
SHRC081=FEHLER\: cpeTableMutex in SH ClasspathManagerImpl2 kann nicht erstellt werden.
SHRC080=FEHLER\: Speicher f\u00fcr Hashtabelleneintrag kann nicht reserviert werden.
JNCK059=JNI-Warnung in %1$s\: Argument \#%2$d ist eine fehlerhafte ID ("%3$s").
JNCK058=JNI-Warnung in %1$s\: Nach dem Aufruf von %2$s m\u00fcssen Sie mit ExceptionCheck, ExceptionClear oder ExceptionOccurred auf Ausnahmebedingungen pr\u00fcfen, bevor Sie %3$s aufrufen.
JNCK057=JNI-Fehler in %1$s\: %2$s darf nicht verwendet werden, um Speicher 0x%3$p freizugeben, der mit %4$s angefordert wurde.
JNCK056=JNI-Fehler in %1$s\: Speicher 0x%2$p von Objekt 0x%3$p abgerufen, von 0x%4$p freigegeben.
JNCK055=JNI-Fehler in %1$s\: Zeiger 0x%2$p wurde von keiner JNI-Funktion zur\u00fcckgegeben oder wurde bereits freigegeben.
JNCK054=JNI-Fehler in %1$s\: Nicht erkannte Modusoption %2$d
JNCK053=JNI-Fehler\: Kritischer Abschnitt muss freigegeben werden, bevor die Funktion fortgesetzt wird.
JNCK052=JNI-Fehler in %1$s\: Klasse %3$.*2$s ist veraltet.
JNCK051=Interner VM-Fehler in %1$s\: Geladene Byte %2$p sind kleiner als JNI-Verweisbyte %3$p.
JNCK050=JNI-Fehler in %s\: PopLocalFrame ohne lokalen Frame im Stack aufgerufen.
SHRC079=FEHLER\: Hashtabelle in SH ClasspathManagerImpl2 kann nicht erstellt werden.
SHRC078=FEHLER\: linkedListHdr-Pool in SH ClasspathManagerImpl2 kann nicht erstellt werden.
SHRC077=FEHLER\: linkedListImpl-Pool in SH ClasspathManagerImpl2 kann nicht erstellt werden.
SHRC076=Klasse %1$s wird im gemeinsam genutzten Cache f\u00fcr Klassenladeprogramm-ID %2$d gesucht...
SHRC075=\ Fehlgeschlagen.
SHRC074=\ Erfolgreich.
SHRC073=Klasse %2$.*1$s wird im gemeinsam genutztem Cache f\u00fcr Klassenladeprogramm-ID %3$d mit URL %5$.*4$s (Index %6$d) gespeichert ...
SHRC072=FEHLER\: Befehlszeilenoption "%s" nicht erkannt
SHRC071=FEHLER\: Befehlszeilenoption "%s" erfordert Unteroption
SHRC070=INFO\: Teilaktualisierungen inaktiviert
JNCK049=JNI-Fehler in %s\: Wiederverwendung von va_list erkannt
JNCK048=JNI-Fehler in %s\: Nicht ausw\u00e4hlbarer Empf\u00e4nger
JNCK047=JNI-Fehler in %s\: Falsches Argument 'clazz'
JNCK046=JNI-Fehler in %1$s\: Methode hat einen falschen R\u00fcckgabetyp ('%2$c').
JNCK045=JNI-Fehler in %s\: Methode ist nicht statisch.
JNCK044=JNI-Fehler in %s\: Methode ist statisch.
JNCK043=JNI-Fehler in %1$s\: Argument \#%2$d; kann %3$s nicht finden.
JNCK042=JNI-Fehler in %1$s\: Argument \#%2$d ist keine Unterklasse von %3$s.
JNCK041=JNI-Fehler in %1$s\: Argument \#%2$d liegt au\u00dferhalb des g\u00fcltigen Bereichs f\u00fcr %3$s (0x%4$x > 0x%5$x).
JNCK040=JNI-Fehler in %1$s\: Argument \#%2$d liegt au\u00dferhalb des g\u00fcltigen Bereichs f\u00fcr %3$s (0x%4$x < 0x%5$x).
SHRC069=INFO\: Reduzieren von Konkurrenzsituationen durch gleichzeitigen Speicherzugriff inaktiviert
SHRC068=INFO\: Lokales Zwischenspeichern von Klassenpfaden inaktiviert
SHRC067=INFO\: \u00dcberpr\u00fcfung der Zeitmarke inaktiviert
SHRC066=INFO\: Sperren von lokalen Hashtabellen inaktiviert
SHRC065=FEHLER\: Pool in shrinit kann nicht zugeordnet werden.
SHRC064=FEHLER\: configMonitor in shrinit kann nicht erstellt werden.
SHRC063=FEHLER\: Speicher f\u00fcr sharedClassConfig in shrinit kann nicht reserviert werden.
SHRC062=FEHLER\: Fehler beim Kopieren des Benutzernamens in den Cache-Standardnamen
SHRC061=Cachename sollte nicht l\u00e4nger als 64 Zeichen sein. Cache wurde nicht erstellt.
SHRC060=FEHLER\: Speicher f\u00fcr Zeichenfolgepuffer in shrinit\:\:hookFindSharedClass kann nicht reserviert werden.
JNCK039=JNI-Fehler in %1$s\: Argument \#%2$d ist NULL.
JNCK038=JNI-Fehler in %1$s\: Argument \#%2$d (0x%3$p) ist kein g\u00fcltiger Objektverweis. Typ\: %4$s\n
JNCK037=JNI-Fehler in %1$s\: Argument \#%2$d (0x%3$p) ist kein lokaler Verweis. Typ\: %4$s
JNCK036=JNI-Fehler in %1$s\: Argument \#%2$d (0x%3$p) ist kein schwacher globaler Verweis. Typ\: %4$s
JNCK035=JNI-Fehler in %1$s\: Argument \#%2$d (0x%3$p) ist kein globaler Verweis. Typ\: %4$s
JNCK034=JNI-Fehler in %1$s\: Argument \#%2$d ist nicht %3$s.
JNCK033=JNI-Fehler in %1$s\: Argument \#%2$d ist kein jarray.
JNCK032=JNI-Fehler in %1$s\: Argument \#%2$d ist kein jobjectArray.
JNCK031=JNI-Fehler in %1$s\: Argument \#%2$d ist NULL.
JNCK030=JNI-Fehler in %s\: Diese Funktion kann nicht aufgerufen werden, w\u00e4hrend die GC inaktiviert ist (wurde vermutlich von einem JVMPI-Ereignis aufgerufen).
JDTS000=Empfangsbereit f\u00fcr Transport dt_socket bei Adresse\: %d
SHRC059=FEHLER\: Speicher f\u00fcr ClasspathItem in shrinit\:\:hookFindSharedClass kann nicht reserviert werden.
SHRC058=FEHLER\: Speicher f\u00fcr ClasspathItem in shrinit\:\:hookStoreSharedClass kann nicht reserviert werden.
SHRC057=Falsche Parameter f\u00fcr Ablaufoption
SHRC056=Befehlszeilenoption "%s" nicht erkannt
SHRC055=Cache-Teilaktualisierungen inaktivieren
SHRC054=Algorithmus zur Reduzierung von Speicherkonkurrenzsituationen inaktivieren
SHRC053=Sperren von lokalen Hashtabellen inaktivieren
SHRC052=Lokales Zwischenspeichern des Klassenpfads inaktivieren
SHRC051=Dynamische Aktualisierungen inaktivieren
SHRC050=Ausf\u00fchrliche Ausgabe aktivieren
JNCK029=JNI-Fehler in %s\: Diese Funktion kann nicht in einem kritischen Abschnitt aufgerufen werden.
JNCK028=JNI-Fehler in %s\: Diese Funktion kann nicht aufgerufen werden, wenn eine Ausnahmebedingung ansteht.
JNCK027=JNI-Fehler in %s\: env ist nicht JNIEnv* f\u00fcr den aktiven Thread.
JNCK026=JNI-Fehler in %s\: env scheint kein g\u00fcltiger Thread zu sein, oder der Speicher ist besch\u00e4digt, oder dies ist keine J9-VM.
JNCK025=Mit -Xcheck\:jni\:nonfatal kann die Ausf\u00fchrung fortgesetzt werden, wenn Fehler festgestellt werden.
JNCK024=JNI-Fehler erkannt. Vorgang wird abgebrochen.
JNCK023=JNI-Fehler erkannt. Vorgang wird fortgesetzt...
JNCK022=freier lokaler Verweis(?)
JNCK021=lokaler Verweis in einem anderen Thread
JNCK020=Debugger-Verweis
SHRC049=Debugmodus, der den gesamten eingehenden Bytecode pr\u00fcft
SHRC048=Alle Elemente im Cache auflisten
SHRC047=Zusammenfassung der Statistikdaten des Caches ausgeben
SHRC046=Alle gemeinsam genutzten Caches und die zugeh\u00f6rigen Statistikdaten anzeigen
SHRC045=Caches l\u00f6schen, die <t> Minuten nicht verwendet wurden
SHRC044=OPTION_MODIFIED_EQUALS"<Ge\u00e4nderter Kontext>"
SHRC043=Gemeinsame Nutzung von ge\u00e4ndertem Bytecode aktivieren \n\t<Ge\u00e4nderter Kontext> ist eine benutzerdefinierte Beschreibung des \u00c4nderungstyps. \n\tJVMs mit demselben <Ge\u00e4nderten Kontext> m\u00fcssen dieselben \u00c4nderungen verwenden.
SHRC042=Alle gemeinsam genutzten Caches l\u00f6schen
SHRC041=Gemeinsam genutzten Cache l\u00f6schen (Namensparameter oder Standard verwenden)
SHRC040=Name des gemeinsam genutzten Caches angeben
JNCK019=schwachen globalen Verweis
JNCK018=globalen Verweis
JNCK017=lokalen Verweis
JNCK016=NULL
JNCK015=\thelp           diesen Bildschirm anzeigen
JNCK014=\tpedantic       gr\u00fcndlichere, aber langsamere Pr\u00fcfungen ausf\u00fchren
JNCK013=\tnovalist       nicht auf Wiederverwendung von va_list pr\u00fcfen
JNCK012=\tnoadvice       keine Informationsnachrichten anzeigen
JNCK011=\tnowarn         keine Warnungen anzeigen
JNCK010=\tnonfatal       bei Erkennung von Fehlern nicht beenden
SHRC039=Allgemeine Hilfe zum gemeinsam genutzten Cache ausgeben
SHRC038=Syntax\:\n\njava -Xshareclasses[\:Option,...]\n\nEs gibt folgende g\u00fcltige Optionen (mit kurzer Beschreibung)\:\n\n
SHRC037=Teilaktualisierungen inaktiviert
SHRC036=Reduzieren von Konkurrenzsituationen durch gleichzeitigen Speicherzugriff inaktiviert
SHRC035=Lokales Zwischenspeichern von Klassenpfaden inaktiviert
SHRC034=\u00dcberpr\u00fcfung der Zeitmarke inaktiviert
SHRC033=Sperren von lokalen Hashtabellen inaktiviert
SHRC032=Der Cache f\u00fcr gemeinsam genutzte Klassen, den Sie zuordnen, hat eine falsche Modifikationsstufe.
SHRC031=Der Cache f\u00fcr gemeinsam genutzte Klassen, den Sie zuordnen, hat eine inkompatible JVM-Version.
SHRC030=Der Cache f\u00fcr gemeinsam genutzte Klassen, den Sie zuordnen, hat einen ung\u00fcltigen Header.
JNCK009=\tnobounds       keine Grenzpr\u00fcfungen f\u00fcr Zeichenfolgen und Feldgruppen durchf\u00fchren
JNCK008=\ttrace          Trace f\u00fcr alle JNI-Funktionen durchf\u00fchren
JNCK007=\tverbose        Trace f\u00fcr bestimmte JNI-Funktionen und -Vorg\u00e4nge durchf\u00fchren
JNCK006=\tall            Anwendungs- und Systemklassen pr\u00fcfen
JNCK005=Syntax\: -Xcheck\:jni\:[Option[,Option[,...]]]
JNCK004=jnichk - JNI-Pr\u00fcfporgramm f\u00fcr J9 Version %s
JNCK003=JNI-Pr\u00fcfprogramm\: lokaler VM-Speicher kann nicht zugeordnet werden.
JNCK002=JNI-Pr\u00fcfprogramm\: Ereignis kann nicht registriert werden.
JNCK001=JNI-Pr\u00fcfprogramm installiert. Mit -Xcheck\:jni\:help kann die Syntax angezeigt werden.
JNCK000=-Xcheck\:jni\: nicht erkannte Option --> '%s'
#
# @(#)src/tools/sov/java_de.properties, tool, as142, 20070618 1.15.2.1
# ===========================================================================
# Licensed Materials - Property of IBM
# "Restricted Materials of IBM"
#
# IBM SDK, Java(tm) 2 Technology Edition, v1.4.2
# (C) Copyright IBM Corp. 2002, 2004. All Rights Reserved
#
# ===========================================================================
#

#
# Java launcher messages
full.version=%2 vollst\u00e4ndige Version "%1"

Could.not.create.JVM=Java Virtual Machine konnte nicht erstellt werden.

Thread.detach.error=Der Hauptthread konnte nicht freigegeben werden.

Option.requires.classpath=%1 erfordert die Angabe eines Klassenpfads.

No.longer.supported=Warnung: Die Option %1 wird nicht mehr unterst\u00fctzt.

Blank.-J.option=Fehler: Nach der Option -J sollte kein Leerzeichen angegeben werden.

No.application.home.found=Die Ausgangsposition der Anwendung kann nicht festgestellt werden.

Error.loading=Fehler beim Laden: %1

JNI.interfaces.not.found=Die JNI-Schnittstellen k\u00f6nnen nicht gefunden werden in: %1

No.public.JRE=Eine \u00f6ffentliche JRE f\u00fcr Release %1 wurde nicht gefunden.

JVM.not.found=Java Virtual Machine wurde nicht gefunden: %1

Path.too.long=Der Pfad ist zu lang: %1

java.error.opening.jar.file=W\u00e4hrend des Versuchs, die JAR-Datei zu \u00f6ffnen, ist ein Java-Fehler aufgetreten: %1

jar.file.not.found=Die JAR-Datei wurde nicht gefunden: %1

class.not.found=Die Java-Klasse wurde nicht gefunden: %1

class.cannot.be.loaded=Die Java-Klasse konnte nicht geladen werden: %1

No.main.method.in.class=In der Klasse ist keine Hauptmethode vorhanden: %1

No.manifest.in.jar.file=Die JAR-Datei enth\u00e4lt kein Manifest: %1

No.main.class.in.manifest=In der JAR-Datei fehlt der Manifesteintrag f\u00fcr die Hauptklasse: %1

main.not.public.in.class=Bei der Hauptmethode der Klasse handelt es sich nicht um eine \u00f6ffentliche Methode: %1

Option.value.invalid=Der JVM-Optionswert ist nicht g\u00fcltig: %1

Invalid.IBM_JAVA_OPTIONS=Ung\u00fcltige Option in IBM_JAVA_OPTIONS: %1

Invalid.service.option=Ung\u00fcltige Option -XService: %1

JVMCI025=Die Optionsdatei kann nicht ge\u00f6ffnet werden: %1

JVMCI030=Ung\u00fcltige Option in der Optionsdatei: %1

Unrecognized.option=Die JVM-Option ist ung\u00fcltig: %1

Invalid.number.of.threads=Ung\u00fcltige Anzahl an Threads: %1

#
# Main syntax help
#
usage=\n\
Syntax: %1 [-Optionen] class [Argumente...]\n\
\            (zum Ausf\u00fchren einer Klasse)\n\
\   oder  %1 [-jar] [-Optionen] JAR-Datei [Argumente...]\n\
\             (zum Ausf\u00fchren einer JAR-Datei)\n\
\n\
Dabei gelten folgende Optionen:\n\
\    -cp -classpath <Verzeichnisse und ZIP/JAR-Dateien werden durch %2 getrennt>\n\
\              Suchpfad f\u00fcr Anwendungsklassen und -ressourcen festlegen\n\
\    -D<Name>=<Wert>\n\
\              Ein Systemmerkmal festlegen\n\
\    -verbose[:class|gc|jni]\n\
\              Ausf\u00fchrliche Ausgabe aktivieren\n\
\    -version  Produktversion drucken\n\
\    -showversion  Produktversion drucken und fortfahren\n\
\    -? \    -help  Diese Hilfenachricht drucken\n\
\    -X        Hilfe zu den vom Standard abweichenden Optionen drucken\n\
\    -assert   Hilfe zu Festlegungsoptionen drucken\n

#
# Additional syntax help for the assert related options
#
assert.usage=\n\
Folgende Festlegungsoptionen k\u00f6nnen im Befehl %1 angegeben werden:\n\
\     -ea[:<Paketname>...|:<Klassenname>]\n\
\     -enableassertions[:<Paketname>...|:<Klassenname>]\n\
\             Festlegungen aktivieren\n\
\     -da[:<Paketname>...|:<Klassenname>]\n\
\     -disableassertions[:<Paketname>...|:<Klassenname>]\n\
\             Festlegungen inaktivieren\n\
\     -esa | -enablesystemassertions\n\
\             Systemfestlegungen aktivieren\n\
\     -dsa | -disablesystemassertions\n\
\             Systemfestlegungen inaktivieren

#
# Additional syntax help for nonstandard JVM options
# ibm@73588 added -Xpd
#
classic.xusage= \    -Xargencoding  Unicode-Escapezeichenfolgen in Argumenten zulassen\n\
\    -Xbootclasspath:<Verzeichnisse und ZIP/JAR-Dateien werden durch %2 getrennt>\n\
\          Suchpfad f\u00fcr Bootprogrammklassen und -ressourcen festlegen\n\
\    -Xbootclasspath/a:<Verzeichnisse und ZIP/JAR-Dateien werden durch %2 getrennt>\n\
\          Am Ende des Bootprogrammklassenpfads anh\u00e4ngen\n\
\    -Xbootclasspath/p:<Verzeichnisse und ZIP/JAR-Dateien werden durch %2 getrennt>\n\
\          Am Anfang des Bootprogrammklassenpfads hinzuf\u00fcgen\n\
\    -Xcheck:jni       Zus\u00e4tzliche \u00dcberpr\u00fcfungen f\u00fcr JNI-Funktionen durchf\u00fchren\n\
\    -Xcheck:nabounds  Zus\u00e4tzliche \u00dcberpr\u00fcfungen f\u00fcr JNI-Bereichsoperationen durchf\u00fchren\n\
\    -Xcomp            Alle Methoden bei der ersten Verwendung kompilieren (nur z/OS)\n\
\    -Xdisableexplicitgc Explizite GCs inaktivieren\n\
\    -Xdisablejavadump Nach Fehler Systemspeicherauszug anstelle des\nJava-Speicherauszugs verwenden\n\
\    -Xlp              Java-Heap unter Verwendung gro\u00dfer Seiten zuordnen\n                                                \    -Xgcpolicy[:optthruput]|[:optavgpause]\n\
\                      Verhalten des Garbage Collector steuern\n\
\    -Xms<Gr\u00f6\u00dfe>       Urspr\u00fcngliche Java-Heapgr\u00f6\u00dfe festlegen\n\
\    -Xmx<Gr\u00f6\u00dfe>       Maximale Java-Heapgr\u00f6\u00dfe festlegen\n\
\    -Xnoclassgc       Garbage Collection f\u00fcr Klassen inaktivieren\n\
\    -Xcompactexplicitgc   Vollst\u00e4ndige Komprimierung in jedem erzwungenen GC (System.gc) ausf\u00fchren\n\
\    -Xnocompactexplicitgc Komprimierung nicht in jedem erzwungenen GC ausf\u00fchren\n\
\    -Xnosigcatch      JVM-Wiederherstellungscode inaktivieren\n\
\    -Xnosigchain      Verketten von Signalroutinen inaktivieren\n\
\    -Xoptionsfile=<Datei> Datei mit JVM-Optionen und -Definitionen\n\
\    -Xoss<size>       Maximale Java-Stackgr\u00f6\u00dfe f\u00fcr Threads festlegen\n\
\    -Xquickstart      Systemstartzeit verbessern durch Verschieben des Kompilierens\n\
\    -Xrs              Die Verwendung von OS Signalen reduzieren\n\
\    -Xrunhprof[:help]|[:<option>=<value>, ...]\n\
\                      Profile f\u00fcr Heap, CPU oder Monitor erstellen\n\
\    -Xrunjdwp[:help]|[:<option>=<value>, ...]\n\
\                      Debug-Bibliotheke f\u00fcr Fern-Debug\n\
\    -Xss<size>        Maximale native Stackgro\u00dfe f\u00fcr Threads\n\
\    -Xverify          Strenge Klassen\u00fcberpr\u00fcfung aller Klassenbelastungen aktivieren\n\
\    -Xverify:none     Strenge Klassen\u00fcberpr\u00fcfung inaktivieren\n\
\    -Xverify:remote   Strenge Klassen\u00fcberpr\u00fcfung aller fernen Klassenbelastungen aktivieren\n\
\    -Xdebug           Fernes Debug aktivieren\n\
Die -X Optionen weichen vom Standard ab und k\u00f6nnen jederzeit ohne\nvorherige Ank\u00fcndigung ge\u00e4ndert werden.\n

#
# Additional syntax help for nonstandard JVM options(debug only)
#
classic.debug.xusage= \    -Xt               Bytecode-Trace (nur Debug - JIT inaktiviert)\n\
\    -Xtm              Method-Trace (nur Debug - JIT inaktiviert)

#
# Reusable JVM option
#
reusable.xusage= F\u00fcr die Verwendung mit Persistent Reusable JVM stehen folgende zus\u00e4tzliche Optionen zur Verf\u00fcgung:\n\
\     -Xinitth          Anfangsgr\u00f6\u00dfe des tempor\u00e4ren Heapspeichers\n\
\     -Xinitsh          Anfangsgr\u00f6\u00dfe des Systemheapspeichers\n\
\     -Xinitacsh        Anfangsgr\u00f6\u00dfe des gemeinsam benutzbaren Anwendungsheapspeichers\n\
\     -Xjvmset          JVM-Gruppe erstellen oder verkn\u00fcpfen (gemeinsame Klassen)\n\
\     -Xresettable      JVM im Modus f\u00fcr Zur\u00fccksetzen ausf\u00fchren\n\
\n Diese Optionen sind im IBM Handbuch \
mit der Formnummer SC34-6201-01 in Kapitel 2, \n\
"Persistent Reusable Java Virtual Machine", aufgef\u00fchrt.\n\
Dieses Handbuch kann \u00fcber folgende Adresse heruntergeladen werden: \n\
http://www-1.ibm.com/servers/eserver/zseries/software/java/pdf/prjvm14.pdf\n
